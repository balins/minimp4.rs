name: Build minimp4.rs

on:
    workflow_dispatch:
    push:
        branches: [master]
        paths:
            - 'packages/**'
            - '.github/workflows/minimp4.yml'
    pull_request:
        branches: [master]
        paths:
            - 'packages/**'
            - '.github/workflows/minimp4.yml'

# Cancels all previous workflow runs for pull requests that have not completed.
# See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
    # The concurrency group contains the workflow name and the branch name for
    # pull requests or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
    lint:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            security-events: write

        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Setup Rust
              uses: ./.github/actions/setup-rust

            - name: Install required cargo components
              uses: taiki-e/install-action@v2
              with:
                  tool: clippy-sarif,sarif-fmt

            - name: Build & Check
              run: |
                  cargo clippy --all-features --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
                  RUSTDOCFLAGS="-D rustdoc::broken-intra-doc-links" cargo doc --workspace --exclude minimp4-sys --all-features --no-deps
              env:
                  CARGO_TERM_COLOR: always

            - name: Upload analysis results to GitHub
              uses: github/codeql-action/upload-sarif@v2
              with:
                  sarif_file: rust-clippy-results.sarif
                  wait-for-processing: true

    test:
        name: test & collect coverage
        runs-on: ubuntu-latest
        continue-on-error: true
        env:
            RUSTFLAGS: -D warnings
            CARGO_TERM_COLOR: always
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Setup Rust
              uses: ./.github/actions/setup-rust

            - name: Install latest nextest release
              uses: taiki-e/install-action@nextest
            - name: Run tests
              run: cargo nextest run
